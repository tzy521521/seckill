<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cn.codingxiaxw.dao.SeckillDao">
    <!--目的:为dao接口方法提供sql语句配置即针对dao接口中的方法编写我们的sql语句-->
    <!--如果拿它跟具有相同功能的 JDBC 代码进行对比，你会立即发现省掉了将近 95% 的代码。MyBatis 就是针对 SQL 构建的，并且比普通的方法做的更好。-->

    <!--parameterType属性：将要传入语句的参数的完全限定类名或别名。这个属性是可选的，因为 MyBatis 可以通过 TypeHandler 推断出具体传入语句的参数-->
    <update id="reduceNumber">
        UPDATE seckill
        SET number = number-1
        WHERE seckill_id=#{seckillId}
        AND start_time <![CDATA[ <= ]]> #{killTime}
        AND end_time >= #{killTime}
        AND number > 0;
    </update>

    <!--更少的配置：包扫描,mybatis配置文件或者mybatis整合spring的spring配置文件中设置-->
    <!--从这条语句中返回的期望类型的类的完全限定名或别名。-->
    <select id="queryById" resultType="Seckill" parameterType="long">
        <!--mybatis配置文件中已经开启了驼峰命名转换-->
        SELECT seckill.seckill_id AS seckillId,seckill.name,seckill.number,seckill.start_time,seckill.end_time,seckill.create_time
        FROM seckill
        WHERE seckill_id=#{seckillId}
    </select>

    <select id="queryAll" resultType="Seckill">
        SELECT *
        FROM seckill
        ORDER BY create_time DESC
        limit #{offset},#{limit}
    </select>
</mapper>